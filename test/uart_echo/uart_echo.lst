; --------------------------------------
; zasm: assemble "uart_echo.asm"
; date: 2022-01-30 02:58:27
; --------------------------------------


USARTD	.equ	0x84		;USART DATA REG
USARTC	.equ	0x85		;USART CONTL REG

        .org    0x0000

main:
	    ld	a,"O"
	    call	com_out
	    ld	a,"K"
	    call	com_out
loop:
      	call	com_in
	    call	com_out
	    jr	loop
 	
com_in:
        in     	a,(USARTC)
	    bit	1,a
        jr      z,com_in
	    in      a,(USARTD)
	    ret

com_out:
        push	af
com_out01:
	    in      a,(USARTC)
        bit     0,a
        jr      z,com_out01
	    pop     af
        out     (USARTD),a
	    ret

	    .end


; +++ segments +++

#CODE          = $0000 =     0,  size = $0026 =    38

; +++ global symbols +++

USARTC    = $0085 =   133          uart_echo.asm:2
USARTD    = $0084 =   132          uart_echo.asm:1
_end      = $0026 =    38          uart_echo.asm:4 (unused)
_size     = $0026 =    38          uart_echo.asm:4 (unused)
com_in    = $0012 =    18          uart_echo.asm:16
com_out   = $001B =    27          uart_echo.asm:23
com_out01 = $001C =    28          uart_echo.asm:25
loop      = $000A =    10          uart_echo.asm:11
main      = $0000 =     0          uart_echo.asm:6 (unused)


total time: 0.0006 sec.
no errors
